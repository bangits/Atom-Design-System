@mixin generate-criteria-form-styles {
    .CriteriaForm {
        position: relative;
        margin-bottom: calculateRem(24px);
        padding: calculateRem(20px) calculateRem(40px);
        box-sizing: border-box;
        box-shadow: 0 calculateRem(2px) calculateRem(6px) rgba(0, 0, 0, 0.25);
        &__Field {
            position: relative;
            display: grid;
            grid-template-columns: 1fr calculateRem(200px) 1fr;
            column-gap: calculateRem(16px);
            &-Condition {
                position: absolute;
                left: calculateRem(-76px);
                top: 50%;
                transform: translateY(-50%);
                margin-top: -1.2rem;
            }
            &-Remove {
                opacity: 0;
                position: absolute;
                right: calculateRem(-34px);
                top: calculateRem(7px);
                transition: opacity 0.3s;
                button {
                    width: calculateRem(30px);
                    height: calculateRem(30px);
                }
            }
            $this: #{&};
            &:hover {
                #{$this}-Remove {
                    opacity: 1;
                }
            }
        }
        &__Buttons {
            @include flex(space-between, center);
        }
        &__Left-Buttons,
        &__Right-Buttons {
            @include flex;
            column-gap: calculateRem(16px);
        }
        &__Condition {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            left: calculateRem(-78px);
        }
        &--ShowedCondition {
            padding-left: calculateRem(90px);
        }
        &--ViewMode {
            padding: calculateRem(10px) calculateRem(16px);
        }
    }
    .Condition {
        font-size: calculateRem(12px);
        min-width: calculateRem(52px);
        height: calculateRem(22px);
        padding: 0;
        white-space: nowrap;
        svg {
            width: calculateRem(5px);
            margin-left: calculateRem(3px);
        }
        &::after {
            content: '';
            position: absolute;
            width: calculateRem(24px);
            border-bottom: calculateRem(1px) dashed #85859c;
            right: calculateRem(-26px);
        }
    }
}