@mixin generate-session-expiring-styles {
  .SessionExpiringWrapper {
    width: 100%;
    height: 100%;
    background-color: getSessionExpiringColors(background-wrapper);

    .CardWrapper {
      @include center-absolute;
      background-color: getSessionExpiringColors(background-card);
      width: getSessionExpiringSizes(card-width);
      height: getSessionExpiringSizes(card-height);
      box-sizing: border-box;

      h2 {
        margin-bottom: 0;
        color: getSessionExpiringColors(title-color);
      }

      p {
        color: getSessionExpiringColors(text-color);
        margin-top: getSessionExpiringSizes(text-margin-top);
        max-width: 34rem;
        margin: 0.3rem auto;
        text-align: center;
      }

      .ChangeContent {
        @include flex(center, center, $direction: column);

        .Icon {
          padding-top: getSessionExpiringSizes(icon-padding-top);
          width: getSessionExpiringSizes(icon-width);
        }

        .InputsGroup {
          @include flex(center, center, $direction: column);

          .InputContent {
            width: getSessionExpiringSizes(input-width);
          }
        }
        .TimeLabel {
          margin-top: getSessionExpiringSizes(time-label-margin-top);
          span {
            font-size: getSessionExpiringSizes(time-label-font-size);
            color: getSessionExpiringColors(time-label-color);
          }
        }
        .BtnGroup {
          @include flex();
          margin-top: getSessionExpiringSizes(btn-group-margin-top);

          button {
            width: getSessionExpiringSizes(btn-width);

            &:first-child {
              border-color: getSessionExpiringColors(btn-border-color);
            }

            &:last-child {
              margin-left: getSessionExpiringSizes(btn-margin-left);
              background-color: getSessionExpiringColors(background-btn);
            }
          }
        }
      }
    }
    .Timer {
      .dotted-cell {
        @include flex(null, flex-start);
        padding: getSessionExpiringSizes(dotted-cell-padding);
        font-size: getSessionExpiringSizes(dotted-font-size);
        line-height: getSessionExpiringSizes(dotted-line-height);
      }

      .timer-group {
        @include flex(null, null, $flex-wrap: wrap);

        .expire-timer__numbers:last-child {
          .dotted-cell {
            display: none;
          }
        }
      }

      .expire-timer {
        @include flex(center, null, $flex-wrap: wrap);

        margin: 0 auto;
        width: 100%;
        height: getSessionExpiringSizes(expire-timer-height);

        &__numbers {
          @include flex(center, flex-start);
          padding-top: getSessionExpiringSizes(expire-timer--numbers-padding-top);
        }

        &__title {
          display: block;
          padding-top: getSessionExpiringSizes(expire-timer--title-padding-top);
          font-family: 'Roboto', sans-serif;
          font-size: getSessionExpiringSizes(expire-timer--title-font-size);
          text-align: center;
          color: getSessionExpiringColors(expire-timer-color);
        }
      }

      .num-cell {
        border-bottom: solid getSessionExpiringColors(num-cell-border-color) getSessionExpiringSizes(num-cell-border);
        font-family: 'Roboto', sans-serif;
        font-size: getSessionExpiringSizes(num-cell-font-size);
        color: getSessionExpiringColors(num-cell-color);
      }
    }
  }
}
