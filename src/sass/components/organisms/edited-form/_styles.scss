@mixin generate-edited-form-styles {
  .EditedFormBase {
    width: getEditedFormSizes(edited-form-width);
    &--control {
      @include flex(space-between, center);
      padding: getEditedFormSizes(control-padding);
      width: getEditedFormSizes(control-width);
      height: auto;
      box-sizing: border-box;
    }

    &--control-title {
      height: getEditedFormSizes(control-title-height);
      font-size: getEditedFormSizes(control-title-font-size);
      font-weight: getEditedFormSizes(control-title-font-weight);
      text-align: left;
      color: getEditedFormColors(control-title-color);
      word-break: break-all;
      width: getEditedFormSizes(control-title-width);
      @include dots-after-text();
    }

    &-content {
      position: relative;
      @include flex(flex-start, null, $flex-wrap: wrap);
      align-content: flex-start;
      padding: getEditedFormSizes(content-padding);
      width: getEditedFormSizes(content-width);
      box-sizing: border-box;
      transition: height getEditedFormSizes(content-transition);
      overflow: hidden;
    }

    &--card-content {
      @include generateBorderWithBoxShadow(getEditedFormColors(border-color), 0.1rem);
      background-color: getEditedFormColors(content-background-color);
    }

    &--option {
      @include flex(null, flex-start, column);
      flex: getEditedFormSizes(option-flex);
      width: getEditedFormSizes(option-width);
      margin: getEditedFormSizes(option-margin);
      height: getEditedFormSizes(option-height);
    }

    &--option-title {
      height: getEditedFormSizes(option-title-height);
      font-size: getEditedFormSizes(option-title-font-size);
      text-align: left;
      color: getEditedFormColors(option-title-color);
      margin: getEditedFormSizes(option-title-margin);
      word-break: break-all;
      width: getEditedFormSizes(option-title-width);
      @include dots-after-text();
    }

    &--option-value {
      height: getEditedFormSizes(option-value-height);
      font-size: getEditedFormSizes(option-value-font-size);
      text-align: left;
      color: getEditedFormColors(option-value-color);
      word-break: break-all;
      width: getEditedFormSizes(option-title-width);
      @include dots-after-text();
    }

    &--option-value-bold {
      font-weight: getEditedFormSizes(option-value-bold);
    }

    &--viewMore {
      @include flex(center, center);
      position: absolute;
      bottom: 0;
      left: 0;
      border-radius: getEditedFormSizes(edit-form-view-more-borderRadius);
      width: 100%;
      height: getEditedFormSizes(edit-form-view-more-height);
      background-color: getEditedFormColors(edit-form-view-bg);
      cursor: pointer;

      > div {
        @include flex(center, center);
        color: getEditedFormColors(edit-form-view-colors);
        width: getEditedFormSizes(edit-form-view-icon-width);
        width: getEditedFormSizes(edit-form-view-icon-height);
        transition: getEditedFormSizes(content-transition);
      }

      > span {
        color: getEditedFormColors(edit-form-view-colors);
        font-size: getEditedFormSizes(edit-form-view-font-size);
        height: getEditedFormSizes(edit-form-view-label-height);
      }
    }

    &--option-label {
      flex: 100%;
      margin: getEditedFormSizes(option-label-margin);

      > span {
        color: getEditedFormColors(option-label-color);
        height: getEditedFormSizes(option-title-height);
        font-size: getEditedFormSizes(option-title-font-size);
        font-weight: getEditedFormSizes(option-label-font-weight);
      }
    }

    &--option-tag {
      margin: getEditedFormSizes(option-margin);
      flex: 100%;
      > div {
        @include flex(null, center, $flex-wrap: wrap);

        > div {
          margin: getEditedFormSizes(option-tag-margin);
          > span {
            color: getEditedFormColors(tag-color) !important;
          }
        }
      }
    }
  }
}
