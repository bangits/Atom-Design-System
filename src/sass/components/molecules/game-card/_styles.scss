@mixin generate-game-card-styles {
  .CardContainer {
    .ProviderName {
      display: block;
    }
    &--with-provider {
      :global {
        .CardTextContainer {
          height: calculateRem(56px);
        }
        .CardText {
          width: 100%;
        }
      }
    }
  }
  .HoverBox {
    opacity: 0;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: all getProviderDetailsSizes(hover-box-button-animation) linear;
    button {
      cursor: pointer;
      background-color: transparent;
      margin: 0;
    }
    &:hover {
      opacity: getProviderDetailsSizes(hover-box-button-opacity);
      .HoverBox-Link {
        opacity: getProviderDetailsSizes(hover-box-button-opacity);
        bottom: getProviderDetailsSizes(hoverbox-linktext-bottom-sizes);
      }
      .HoverBox-PlayBtn {
        opacity: getProviderDetailsSizes(hover-box-play-button-opacity);
        margin-top: getProviderDetailsSizes(hoverbox-playbtn-view-icon-margin-top);
      }
      .HoverBox-ViewIcon {
        top: getProviderDetailsSizes(hoverbox-linktext-bottom-sizes);
        opacity: getProviderDetailsSizes(hover-box-play-button-opacity);
      }
    }
  }
  .HoverBox-Indicator {
    position: absolute;
    width: 8px;
    height: 8px;
    background: #20df20;
    border-radius: 50%;
    z-index: 100;
    top: 5px;
    left: 5px;
  }
  .HoverBox-PlayBtn {
    border: solid transparent 0;
    background-color: transparent;
    cursor: pointer;
    display: block;
    width: getProviderDetailsSizes(hoverbox-playbtn-sizes);
    height: getProviderDetailsSizes(hoverbox-playbtn-sizes);
    border: solid getProviderDetailsColors(hoverbox-play-btn-border-color)
      getProviderDetailsSizes(hover-box-play-button-border);
    @include center-absolute();
    padding: getProviderDetailsSizes(hover-box-play-button-padding);
    z-index: getProviderDetailsSizes(hoverbox-playbtn-z-index);
    border-radius: getProviderDetailsSizes(hoverbox-playbtn-border-radius);
    margin-top: getProviderDetailsSizes(hoverbox-playbtn-margin-top);
    opacity: 0;
    transition: all getProviderDetailsSizes(hoverbox-playbtn-transition) linear;
    &:hover {
      .HoverBox-PlayBtnInner {
        background-color: getProviderDetailsColors(hover-box-play-btn-inner-background);
        opacity: getProviderDetailsSizes(hover-box-play-btn-inner-opacity);
      }
    }
  }
  .HoverBox-PlayBtnInner {
    width: 100%;
    height: 100%;
    background-color: getProviderDetailsColors(hoverbox-playbtn-background-color);
    z-index: getProviderDetailsSizes(hoverbox-playbtn-inner-z-index);
    border-radius: getProviderDetailsSizes(hoverbox-playbtn-border-radius);
    transition: background getProviderDetailsSizes(hover-box-button-animation) linear;
    @include flex(center, center);
  }
  .HoverBox-OpacityLayer {
    display: block;
    z-index: getProviderDetailsSizes(hoverbox-opacity-layer-z-index);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: getProviderDetailsColors(hoverbox-opacity-layer-background-color);
  }
  .HoverBox-PlayBtnIcon {
    display: block;
    height: getProviderDetailsSizes(hover-box-play-btn-icon-height);
    width: getProviderDetailsSizes(hoverbox-play-btn-icon-width);
    @include flex(center, center);
    transform: translate(getProviderDetailsSizes(hoverbox-play-btn-icon-transform), 0);
    svg {
      fill: getProviderDetailsColors(play-icon-fill);
    }
  }
  .HoverBox-ViewIcon {
    background-color: transparent;
    opacity: 0;
    display: block;
    padding: 0;
    margin: 0;
    font-size: 0;
    z-index: getProviderDetailsSizes(hoverbox-view-icon-z-index);
    position: absolute;
    top: 0;
    right: getProviderDetailsSizes(hover-box-view-icon-position-right);
    width: getProviderDetailsSizes(hoverbox-view-icon-width);
    transition: all getProviderDetailsSizes(hoverbox-view-icon-transition) linear;
    border: 0;
    transition: all linear getProviderDetailsSizes(hover-box-button-animation);
    svg {
      width: getProviderDetailsSizes(hoverbox-view-icon-width);
      fill: getProviderDetailsColors(hoverbox-view-icon-color);
    }
  }
  .HoverBox-Link {
    cursor: pointer;
    border: solid transparent 0 !important;
    background-color: transparent !important;
    width: 100%;
    opacity: 0;
    display: block;
    text-align: center;
    position: absolute;
    bottom: 0;
    padding-left: 0;
    padding-right: 0;
    right: getProviderDetailsSizes(hoverbox-link-text-position-right);
    transform: translate(getProviderDetailsSizes(hoverbox-link-text-position-right), 0);
    z-index: getProviderDetailsSizes(hoverbox-view-icon-z-index);
    transition: all linear getProviderDetailsSizes(hoverbox-playbtn-transition);
    &__Text {
      position: relative;
      top: 0;
      left: 0;
      color: getProviderDetailsColors(hoverbox-view-icon-color);
      font-size: getProviderDetailsSizes(hoverbox-link-text-font-size);
      opacity: getProviderDetailsSizes(hover-box-link--text-opacity);
      transition: all getProviderDetailsSizes(hover-box-button-animation) linear;
      padding-left: 0;
      padding-right: 0;
      border: 0;
      font-weight: getProviderDetailsSizes(hover-box-link--text-font-weight);
      &:hover {
        opacity: getProviderDetailsSizes(hover-box-link--text-hover-opacity);
      }
      &:after {
        content: '';
        display: block;
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: getProviderDetailsSizes(hover-box-link--text-after-height);
        background-color: getProviderDetailsColors(hover-box-link-text-after-backgroud-color);
      }
    }
  }
  .HoverBox-Main-Provider {
    img {
      object-fit: contain !important;
      background: black;
    }
    &:hover {
      .HoverBox-Indicator {
        opacity: 0;
      }
    }
  }
  .HoverBox-Main {
    &:hover {
      .HoverBox-Indicator {
        opacity: 0;
      }
    }
  }
}
