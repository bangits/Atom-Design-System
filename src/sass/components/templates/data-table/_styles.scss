@mixin generate-data-table-styles {
  .TableWrapper {
    &--FullScreen {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      z-index: 9999;
      background: #fff;
      height: 100%;
      & > div {
        margin-top: calculateRem(30px);
      }
    }
  }
  .FullScreenClose {
    position: absolute;
    top: 0;
    right: 0;
  }
  .TableConfigSelect {
    max-width: getDataTableSizes(table-config-select-width);
    &--exchange {
      @include flex(null, center);
      max-width: getDataTableSizes(table-config-exchange-select);
      & > div {
        margin-right: getDataTableSizes(exchange-select-tooltip-margin);
      }
    }
  }
  .RefreshButton > div {
    margin: 0;
  }
  .TableLeftSideWrapper {
    @include flex(null, center);
  }
  .Filters {
    margin-bottom: getDataTableSizes(filters-margin-bottom);
  }
  .ImageColumnEmpty {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: calculateRem(4px);
    background: color(alabaster);
    width: calculateRem(40px);
    height: calculateRem(40px);
    border-radius: getDataTableSizes(image-column);
  }
  .ImageColumn {
    img {
      border-radius: getDataTableSizes(image-column);
      object-fit: cover;
    }
  }
  .ImageColumnCircle {
    img {
      border-radius: getDataTableSizes(image-column-circle);
      object-fit: cover;
    }
  }
  .DataTablePageWrapper {
    // table {
    //     min-height: getDataTableSizes(empty-table-min-height);
    // }
    // .TableHaveData {
    //     table {
    //         min-height: getDataTableSizes(data-table-single-item-min-height);
    //     }
    // }
    .TableHaveHoveredImage {
      tbody tr {
        -webkit-transition-property: z-index;
        transition-property: z-index;
        -webkit-transition-duration: 0;
        transition-duration: 0;
        -webkit-transition-delay: 0.7s;
        transition-delay: 0.7s;
        z-index: 0;
        &:hover {
          z-index: 1;
        }
        img {
          &:hover {
            transform: scale(3);
          }
        }
        &:last-child img {
          transform-origin: bottom left;
        }
        &:nth-last-child(2) img {
          transform-origin: bottom left;
        }
        &:first-child img {
          transform-origin: top left;
        }
      }
    }
  }
  .ImageHoverColumn {
    img {
      width: getDataTableSizes(data-table-image-hover-column-width) !important;
      height: getDataTableSizes(data-table-image-hover-column-height) !important;
      top: 0;
      left: getDataTableSizes(data-table-image-hover-column-left);
      border-radius: getDataTableSizes(data-table-image-border-radius);
      transition: getDataTableSizes(data-table-image-animation);
      transition: transform getDataTableSizes(data-table-image-animation);
      transition-delay: getDataTableSizes(data-table-image-animation-delay);
      object-fit: contain;
      transform-origin: top left;
      &:hover {
        transform: scale(getDataTableSizes(data-table-image-scale));
        box-shadow: getDataTableSizes(data-table-image-box-shadow) getDataTableColors(image-box-shadow-color);
      }
    }
  }
  .ImageHoverColumnCircle {
    img {
      width: getDataTableSizes(data-table-image-hover-column-width) !important;
      height: getDataTableSizes(data-table-image-hover-column-height) !important;
      top: 0;
      left: getDataTableSizes(data-table-image-hover-column-left);
      border-radius: getDataTableSizes(data-table-image-border-radius);
      transition: getDataTableSizes(data-table-image-animation);
      transition: transform getDataTableSizes(data-table-image-animation);
      transition-delay: getDataTableSizes(data-table-image-animation-delay);
      object-fit: cover;
      transform-origin: top left;
      &:hover {
        transform: scale(getDataTableSizes(data-table-image-scale));
        box-shadow: getDataTableSizes(data-table-image-box-shadow) getDataTableColors(image-box-shadow-color);
      }
    }
  }
  .ImageColumn,
  .ImageHoverColumn,
  .ImageColumnCircle,
  .ImageHoverColumnCircle {
    & > div {
      overflow: unset;
    }
  }
  .TableActionsWrapper {
    @include flex(null, center);
  }
  .TableConfigsWrapper {
    @include flex(space-between, center);
    margin-bottom: getDataTableSizes(table-config-wrapper-margin-bottom);
  }
}
