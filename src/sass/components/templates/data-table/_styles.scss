@mixin generate-data-table-styles {
  .TableConfigSelect {
    max-width: getDataTableSizes(table-config-select);
  }

  .TableLeftSideWrapper {
    @include flex(null, center);
  }

  .Filters {
    margin-bottom: getDataTableSizes(filters-margin-bottom);
  }

  .ImageColumn {
    border-radius: getDataTableSizes(image-column);
    object-fit: cover;
  }

  .DataTablePageWrapper {
    .TableHaveHoveredImage {
      tbody tr {
        -webkit-transition-property: z-index;
        transition-property: z-index;
        -webkit-transition-duration: 0;
        transition-duration: 0;
        -webkit-transition-delay: 0.7s;
        transition-delay: 0.7s;
        z-index: 0;

        &:hover {
          z-index: 1;
        }

        img {
          &:hover {
            transform: scale(3);
          }
        }

        &:last-child img {
          transform-origin: bottom left;
        }
        &:nth-last-child(2) img {
          transform-origin: bottom left;
        }
        &:first-child img {
          transform-origin: top left;
        }
      }

      table {
        min-height: getDataTableSizes(data-table-single-item-min-height);
      }

      tr {
        td {
          &:nth-child(2) {
            > div {
              overflow: unset;
            }
          }
        }
      }

      .ImageHoverColumn {
        width: getDataTableSizes(data-table-image-hover-column-width);
        height: getDataTableSizes(data-table-image-hover-column-height);
        top: 0;
        left: getDataTableSizes(data-table-image-hover-column-left);
        border-radius: getDataTableSizes(data-table-image-border-radius);
        transition: 0.3s;
        transition: transform 0.3s;
        transition-delay: 0.7s;
        object-fit: cover;
        transform-origin: top left;

        &:hover {
          transform: scale(3);
          box-shadow: 0px 2px 10px #00000029;
        }
      }
    }
  }

  .TableActionsWrapper {
    @include flex();
  }

  .TableConfigsWrapper {
    @include flex(space-between, center);
  }
}
