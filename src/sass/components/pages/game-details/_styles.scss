@mixin generate-game-details-styles {
  .GameDetailsBase {
    
    &__GameTag {
      cursor: pointer;
    }

    .GameDetailsBase--notCompleted {
      color: color(black-color);
    }

    .Empty-Page-Title {
      display: block;
      text-align: center;
      width: getGameDetailsSizes(empty-page-title-width);
      font-size: getGameDetailsSizes(empty-page-title-font-size);
      line-height: getGameDetailsSizes(empty-page-title-line-height);
      font-family: inherit;
      letter-spacing: getGameDetailsSizes(empty-page-title-letter-spacing);
      font-weight: getGameDetailsSizes(empty-page-title-font-weight);
      opacity: getGameDetailsSizes(empty-page-title-opacity);
      color: getGameDetailsColors(empty-page-title-color);
    }

    .Empty-Page-Cell {
      @include flex(center, center, null, wrap);
      min-height: getGameDetailsSizes(empty-page-cell-min-height);
    }
    .FlexList {
      @include flex;
      &__Item {
        padding-right: getGameDetailsSizes(flex-list-Item-padding-right);
      }
    }

    .MainCarcass {
      @include flex($flex-wrap: nowrap);
      // max-width: getGameDetailsSizes(main-carcass-max-width);
      &__Sidebar {
        width: getGameDetailsSizes(main-carcass-sidebar-width);
      }
      &__Content {
        width: 100%;
        padding-left: getGameDetailsSizes(main-carcass-content-padding-left);

        form {
          &:last-child{
            width: 100%;
          }
        }
      }

    }
    .Empty-Page-Icon-Cell {
      max-width: getGameDetailsSizes(empty-page-icon-cell-max-width);
      & > svg {
        width: 100% !important;
        height: auto !important;
      }
    }
    .BreadCrumbWrapper {
      display: block;
      padding-bottom: getGameDetailsSizes(bread-crumb-wrapper-padding-bottom);
    }

    .CardWrapper {
      @include p;
      padding-bottom: getGameDetailsSizes(card-wrapper-padding-bottom);
      & > div {
        margin-bottom: getGameDetailsSizes(card-wrapper__div-margin-bottom);
      }

      &--Change-Update {
        & > div > div > span {
          font-size: getGameDetailsSizes(card-wrapper-change-update__div__div__span-font-size);
        }
      }
    }

    .EmptyWrapper {
      @include flex;
      button {
        width: getGameDetailsSizes(empty-wrapper__button-width);
        height: getGameDetailsSizes(empty-wrapper__button-height);
        border-radius: getGameDetailsSizes(empty-wrapper__button-border-radius);
        font-size: getGameDetailsSizes(empty-wrapper__button-font-size);
        padding: getGameDetailsSizes(empty-wrapper__button-padding);
        margin: getGameDetailsSizes(empty-wrapper__button-margin);
        max-width: auto;
        min-width: auto;

        cursor: pointer;
        &:last-child {
          margin: 0 10px 0 0;
        }
      }
    }

    .Device-Tag {
      display: inline-flex;
      padding: getGameDetailsSizes(device-tag-padding);
      border-radius: getGameDetailsSizes(device-tag-border-radius);
      cursor: default;
      svg {
        fill: getGameDetailsColors(device-tag-svg-fill);
      }
    }

    .Device-Tag-Label {
      font-family: inherit;
      font-size: getGameDetailsSizes(device-tag-label-font-size);
      line-height: getGameDetailsSizes(device-tag-label-line-height);
      margin-left: getGameDetailsSizes(device-tag-label-margin-left);
      color: getGameDetailsColors(device-tag-label-color);
    }
  }

  .TagsCell {
    @include flex;
    padding: getGameDetailsSizes(tags-cell-padding);
    & > svg {
      margin-right: getGameDetailsSizes(tags-cell__svg-margin-right);
    }
    & > div {
      margin-right: getGameDetailsSizes(tags-cell__div-margin-right);
    }
  }

  .TabContent {
    @include flex;
    box-sizing: getGameDetailsSizes(tab-content-box-sizing);

    &--TwoColGrid {
      display: getGameDetailsSizes(tab-content-two-col-grid-display);
      grid-template-columns: getGameDetailsSizes(tab-content-two-col-grid-grid-template-columns);
      grid-template-rows: getGameDetailsSizes(tab-content-two-col-grid-grid-template-rows);
      grid-column-gap: getGameDetailsSizes(tab-content-two-col-grid-grid-column-gap);
      grid-row-gap: getGameDetailsSizes(tab-content-two-col-grid-grid-row-gap);
      grid-template-areas: getGameDetailsSizes(tab-content-two-col-grid-grid-template-areas);
    }
    .FlexibleFormWrapper {
      
      box-sizing: border-box;
      & > div,
      & > div > div {
        width: 100%;
        box-sizing: border-box;
      }
      &--3 {
        text-decoration: none;
        width: 100%;
        grid-area: 2 / 1 / 3 / 3;
      }
    }
  }

  .GameDetailsBase {
    &__GameTag {
      cursor: pointer;
    }
  }

  .Card__Inner {
    border-radius: getGameDetailsSizes(card-inner-border-radius);
    min-height: getGameDetailsSizes(card-inner-min-height);
    &--Lvl-1 {
      background: getGameDetailsColors(card-inner-lvl-1-bg-color);
      padding: getGameDetailsSizes(card-inner-lvl-1-padding);
    }
    &--Lvl-2 {
      padding: getGameDetailsSizes(card-inner-lvl-2-padding);
    }
  }

  .CardSubtitle {
    display: block;
    font-family: getGameDetailsSizes(card-subtitle-font-family);
    font-size: getGameDetailsSizes(card-subtitle-font-size);
    line-height: getGameDetailsSizes(card-subtitle-line-height);
    color: getGameDetailsColors(card-subtitle-color);
  }

  .CardTitle {
    font-weight: getGameDetailsSizes(card-title-font-weight);
    overflow: getGameDetailsSizes(card-title-overflow);
    text-overflow: getGameDetailsSizes(card-title-text-overflow);
    white-space: getGameDetailsSizes(card-title-white-space);
    line-height: getGameDetailsSizes(card-title-line-height);
    font-size: getGameDetailsSizes(card-title-font-size);
    font-family: getGameDetailsSizes(card-title-font-family);
    color: getGameDetailsColors(card-title-color);
  }

  .GameDetails__Sidebar-Widget {
    padding-bottom: 10px;
  }
}
