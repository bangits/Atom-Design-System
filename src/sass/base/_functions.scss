@import './variables';

@function getBaseColors($property-name) {
  @return map-get($base-colors, $property-name);
}

@function svgToDataUrl($code) {
  $escaped: str-replace($code, '\\r', '');
  $escaped: str-replace($escaped, '\\n', '');
  $escaped: str-replace($escaped, "'", "'");
  $escaped: str-replace($escaped, '<', '%3C');
  $escaped: str-replace($escaped, '>', '%3E');
  $escaped: str-replace($escaped, '#', '%23');

  @return url('data:image/svg+xml;charset=utf-8,#{$escaped}');
}

@function svg-url($svg) {
  //
  //  Add missing namespace
  //
  @if not str-index($svg, xmlns) {
    $svg: str-replace($svg, '<svg', '<svg xmlns="http://www.w3.org/2000/svg"');
  }
  //
  //  Chunk up string in order to avoid
  //  "stack level too deep" error
  //
  $encoded: '';
  $slice: 2000;
  $index: 0;
  $loops: ceil(str-length($svg) / $slice);
  @for $i from 1 through $loops {
    $chunk: str-slice($svg, $index, $index + $slice - 1);
    //
    //   Encode
    //
    $chunk: str-replace($chunk, '%', '%25');
    $chunk: str-replace($chunk, '"', '%22');
    $chunk: str-replace($chunk, "'", '%27');
    $chunk: str-replace($chunk, '&', '%26');
    $chunk: str-replace($chunk, '#', '%23');
    $chunk: str-replace($chunk, '{', '%7B');
    $chunk: str-replace($chunk, '}', '%7D');
    $chunk: str-replace($chunk, '<', '%3C');
    $chunk: str-replace($chunk, '>', '%3E');

    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }
  @return url('data:image/svg+xml,#{$encoded}');
}
